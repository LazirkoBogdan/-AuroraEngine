import StateMachine from './StateMachine';export default class StateMachineSubController {	mainController;	constructor(mainController) {		this.mainController = mainController;		this.stateMachine   = new StateMachine();		this.createStateMachine();			}		createStateMachine() {		const mainController       = this.mainController;				game.states                = {};		game.states.machine        = this.stateMachine.createMachine({			initialState: 'initial',			initial: {				actions: {					onEnter() {},					onExit() {},				},				transitions: {					switch: {						target: 'introGame',						action() {},					},				},			},			initialGame: {				actions: {					onEnter() {					},					onExit() {},				},				transitions: {					switch: {						target: 'betGame',						action() {},					},				},			},			recovery: {				actions: {					onEnter() {					},					onExit() {},				},				transitions: {					switch: {						target: 'selectGame',						action() {},					},				},			},			gameOver: {				actions: {					onEnter() {					},					onExit() {										},				},				transitions: {					switch: {						target: 'initialGame',						action() {},					},				},			},		});		game.states.state          = game.states.machine.value;				this.mainController.state  = game.states.state;		this.mainController.states = game.states;	}}