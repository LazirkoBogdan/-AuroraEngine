import Core from '../core';export default class Polyfill {}window.polyfill = Polyfill;Polyfill.hackPixi = ()=>{		const utils = PIXI.utils;	const BaseTexture = PIXI.BaseTexture;	const Texture = PIXI.Texture;	PIXI.Texture.fromLoader = function fromLoader(source, imageUrl, name){		if(!name)			name = imageUrl;				let texture = utils.TextureCache[name] || utils.TextureCache[imageUrl];		if(!texture){			let baseTexture = utils.BaseTextureCache[name] || utils.BaseTextureCache[imageUrl];			if(!baseTexture){				//create baseTexture				baseTexture = new BaseTexture(source, undefined, utils.getResolutionOfUrl(imageUrl));				//add baseTexture to cache by name				BaseTexture.addToCache(baseTexture, name);				// also add references by url if they are different.				if (name !== imageUrl) BaseTexture.addToCache(baseTexture, imageUrl);			}			//create texture			texture = new Texture(baseTexture);			//add texture to cache by name			Texture.addToCache(texture, name);			// also add references by url if they are different.			if (name !== imageUrl) Texture.addToCache(texture, imageUrl);		}		//return texture		return texture;	}}Polyfill.hackPixi()